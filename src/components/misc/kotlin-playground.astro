---
import type { HTMLAttributes } from 'astro/types';

// Extend HTMLAttributes to include Kotlin playground attributes
declare global {
  namespace astroHTML {
    namespace JSX {
      interface HTMLAttributes {
        lines?: string | boolean;
        'auto-indent'?: string | boolean;
        theme?: string;
        from?: string | number;
        to?: string | number;
      }
    }
  }
}

export interface Props {
  code: string;
}

const { code } = Astro.props;

// Check if the code already has a main function
const hasMainFunction = code.includes("fun main(");

// If not, wrap the code in a main function
const processedCode = hasMainFunction ? code : `fun main() {
${code}
}`;

// Get the line count to set the "to" attribute
const lineCount = processedCode.split('\n').length;

// Adjust the "to" attribute based on whether the code already has a main function
const toValue = hasMainFunction ? (lineCount - 3).toString() : (lineCount - 1).toString();
---

<div class="kotlin-playground-wrapper">
  <div class="kotlin-code" lines="true" auto-indent="true" theme="darcula" from="2" to={toValue}>
    {processedCode}
  </div>
</div>

<style>
  .kotlin-playground-wrapper {
    margin: 1.5rem 0;
  }
</style>
